{"version":3,"sources":["webpack:///./src/components/img-components/code-screenshots/rust-fizzbuzzifies-strings-screenshot.img.js","webpack:///./src/components/img-components/code-screenshots/ruby-fizzbuzzifies-strings-screenshot.img.js","webpack:///./src/components/img-components/code-screenshots/fizzbuzzify-string-screenshot-ts.img.js","webpack:///./src/components/generic-reusable-components/stackable-columns-container.js","webpack:///./src/components/generic-reusable-components/ready-to-get-started-section.js","webpack:///./src/components/generic-reusable-components/key-principle-header.js","webpack:///./src/components/img-components/code-screenshots/fizzbuzzify-string-screenshot-clj.img.js","webpack:///./src/components/img-components/code-screenshots/python-fizzbuzzified-string-screenshot.img.js","webpack:///./src/components/img-components/code-screenshots/go-fizzbuzzified-string-screenshot.img.js","webpack:///./src/components/img-components/code-screenshots/fizzbuzzify-string-screenshot-js.img.js","webpack:///./src/components/img-components/code-screenshots/java-fizzbuzzified-string-screenshot.img.js","webpack:///./src/components/generic-reusable-components/key-principles-info-block.js"],"names":["RustFizzbuzzifiedStringImage","___EmotionJSX","StaticQuery","query","render","data","Img","fluid","placeholderImage","childImageSharp","RubyFizzbuzzifiedStringImage","TypeScriptFizzbuzzifiedStringImage","StackableColumnsContainer","_styled","target","name","styles","ReadyToGetStartedSection","StyledPrinciplesHeader","KeyPrinciplesHeader","_ref","headerText","className","ClojureFizzbuzzifiedStringImage","PythonFizzbuzzifiedStringImage","GoFizzbuzzifiedStringImage","JsFizzbuzzifiedStringImage","JavaFizzbuzzifiedStringImage","StyledPrinciplesInfoBlock","KeyPrinciplesInfoBlock","header","paragraph1","paragraph2"],"mappings":"8FAAA,2DA+BeA,IAhBsB,WAAH,OAChCC,YAACC,cAAW,CACVC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIJ,YAACK,IAAG,CAACC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,a,oCC5BtE,2DA+BeG,IAhBsB,WAAH,OAChCT,YAACC,cAAW,CACVC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIJ,YAACK,IAAG,CAACC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,a,oCC5BtE,2DA+BeI,IAhB4B,WAAH,OACtCV,YAACC,cAAW,CACVC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIJ,YAACK,IAAG,CAACC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,a,oDC1BtE,IAAMK,EAAyBC,YAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,0SAwBhBJ,O,kDCxBf,IAAMK,EAAwBJ,YAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,2cA2BfC,O,0EC1Bf,IAAMC,EAAsBL,YAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,kTA0BbG,IANa,SAAHC,GAAA,IAAKC,EAAUD,EAAVC,WAAU,OACtCpB,YAACiB,EAAsB,KACrBjB,YAAA,MAAIqB,UAAU,UAAUD,M,kCCzB5B,2DA+BeE,IAhByB,WAAH,OACnCtB,YAACC,cAAW,CACVC,MAAK,YAWLC,OAAQ,SAAAC,GAAI,OAAIJ,YAACK,IAAG,CAACC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,a,kCC5BtE,2DA+BeiB,IAhBwB,WAAH,OAClCvB,YAACC,cAAW,CACVC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIJ,YAACK,IAAG,CAACC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,a,kCC5BtE,2DA+BekB,IAhBoB,WAAH,OAC9BxB,YAACC,cAAW,CACVC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIJ,YAACK,IAAG,CAACC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,a,kCC5BtE,2DA+BemB,IAhBoB,WAAH,OAC9BzB,YAACC,cAAW,CACVC,MAAK,YAWLC,OAAQ,SAAAC,GAAI,OAAIJ,YAACK,IAAG,CAACC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,a,kCC5BtE,2DA+BeoB,IAhBsB,WAAH,OAChC1B,YAACC,cAAW,CACVC,MAAK,aAWLC,OAAQ,SAAAC,GAAI,OAAIJ,YAACK,IAAG,CAACC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,a,0ECzBtE,IAAMqB,EAAyBf,YAAA,OAAAC,OAAA,aAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,uWAyChBa,IAbgB,SAAHT,GAAA,IAAKf,EAAIe,EAAJf,KAAI,OACnCJ,YAAC2B,EAAyB,KACxB3B,YAAA,MAAIqB,UAAU,UAAUjB,EAAKyB,OAASzB,EAAKyB,OAAS,IACpD7B,YAAA,SAAII,EAAK0B,WAAa1B,EAAK0B,WAAa,IACxC9B,YAAA,SAAII,EAAK2B,WAAa3B,EAAK2B,WAAa,IAExC/B,YAAA,WACAA,YAAA,WACAA,YAAA,WACAA,YAAA","file":"component---src-pages-engineering-js-910b94622d30f9ec9c69.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst RustFizzbuzzifiedStringImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"code-screenshots/rust-fizzbuzzified-string-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default RustFizzbuzzifiedStringImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst RubyFizzbuzzifiedStringImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"code-screenshots/ruby-fizzbuzzified-string-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default RubyFizzbuzzifiedStringImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst TypeScriptFizzbuzzifiedStringImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"code-screenshots/fizzbuzzify-string-screenshot-ts.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default TypeScriptFizzbuzzifiedStringImage;\n","import styled from '@emotion/styled';\n\nconst StackableColumnsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  padding: 0 20px 80px;\n\n  @media only screen and (max-width: 900px) {\n    font-size: 18px;\n    line-height: 31px;\n    flex-direction: column;\n  }\n\n  p {\n    font-size: 20px;\n    line-height: 34px;\n\n    @media only screen and (max-width: 900px) {\n      font-size: 19px;\n      line-height: 32px;\n    }\n  }\n`;\n\nexport default StackableColumnsContainer;\n","import styled from '@emotion/styled';\n\nconst ReadyToGetStartedSection = styled.div`\n  \n  padding: calc(40px + 20vw) calc(20px + 2vw);\n  \n  h1 {\n    font-family: 'e2-Raleway-Black-Italic';\n    font-size: calc(20px + 5vw);\n    line-height: calc(30px + 9vw);\n    margin: calc(5px + 1vw);\n    text-align: center;\n  }\n\n  a {\n    cursor: pointer;\n    font-family: 'e2-Raleway-Semi-Bold-Italic';\n    display: flex;\n    justify-content: center;\n    padding-top: calc(10px + 6vw);\n    font-size: calc(10px + 3vw);\n    line-height: calc(15px + 4.5vw);\n    justify-content: center;\n    align-items: center;\n    text-decoration: underline;\n    letter-spacing: 1.5px;\n  }\n`;\n\nexport default ReadyToGetStartedSection;","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledPrinciplesHeader = styled.div`\n\n  background-image: linear-gradient(90deg,#000032,#0ff);\n  min-height: 60vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly; \n  width: 100%;\n  padding: 13vw 10vw;\n  \n  h1.header {\n    font-size: calc(10px + 6vw);\n    line-height: calc(10px + 11vw);\n    font-family: 'e2-Raleway-Extra-Bold';\n    letter-spacing: 1px;\n    text-align: left;\n  }\n\n`;\n\nconst KeyPrinciplesHeader = ({headerText}) => (\n  <StyledPrinciplesHeader>\n    <h1 className='header'>{headerText}</h1>\n  </StyledPrinciplesHeader>\n);\n\nexport default KeyPrinciplesHeader;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst ClojureFizzbuzzifiedStringImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"code-screenshots/fizzbuzzify-string-screenshot-clj.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default ClojureFizzbuzzifiedStringImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PythonFizzbuzzifiedStringImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"code-screenshots/python3-fizzbuzzified-string-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default PythonFizzbuzzifiedStringImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst GoFizzbuzzifiedStringImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"code-screenshots/go-fizzbuzzified-string-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default GoFizzbuzzifiedStringImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst JsFizzbuzzifiedStringImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"code-screenshots/fizzbuzzify-string-screenshot-js.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default JsFizzbuzzifiedStringImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst JavaFizzbuzzifiedStringImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"code-screenshots/java-fizzbuzzified-string-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default JavaFizzbuzzifiedStringImage;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledPrinciplesInfoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly; \n  width: 100%;\n  padding: 6vw 10vw;\n  \n  h1.header {\n    font-size: calc(10px + 3vw);\n    line-height: calc(15px + 4.5vw);\n    margin: 3vw 0;\n    font-family: 'e2-Raleway-Semi-Bold';\n    letter-spacing: 1px;\n    text-align: left;\n    /* font-size: 27px; */\n    /* line-height: 60px; */\n  }\n  \n  p {\n    font-size: calc(10px + 1vw);\n    line-height: calc(16px + 3vw);\n    opacity: 0.8;\n    font-family: 'e2-Raleway';\n    color: #DDDDDD;\n  }\n\n`;\n\nconst KeyPrinciplesInfoBlock = ({data}) => (\n  <StyledPrinciplesInfoBlock>\n    <h1 className='header'>{data.header ? data.header : ''}</h1>\n    <p>{data.paragraph1 ? data.paragraph1 : ''}</p>\n    <p>{data.paragraph2 ? data.paragraph2 : ''}</p>\n\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n  </StyledPrinciplesInfoBlock>\n);\n\nexport default KeyPrinciplesInfoBlock;\n"],"sourceRoot":""}