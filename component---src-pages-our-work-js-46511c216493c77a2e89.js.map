{"version":3,"sources":["webpack:///./src/components/generic-reusable-components/stackable-columns-container.js","webpack:///./src/components/generic-reusable-components/ready-to-get-started-section.js","webpack:///./src/components/img-components/kate-from-hr-screenshot.img.js","webpack:///./src/components/img-components/triple-gainers-email.img.js","webpack:///./src/components/img-components/jim-twitter-screenshot.img.js","webpack:///./src/components/img-components/everybody-codes.img.js","webpack:///./src/components/img-components/woj-blog-screenshot.img.js","webpack:///./src/components/img-components/evaluates-2-screenshot.img.js","webpack:///./src/components/img-components/e2-github-page.img.js","webpack:///./src/components/img-components/titanium-lambda.img.js","webpack:///./src/components/img-components/gatsby-starter-tdd-bdd.img.js","webpack:///./src/components/img-components/free-talks.img.js","webpack:///./src/components/our-work-piece-of-work.js","webpack:///./src/components/img-components/person-img.img.js","webpack:///./src/components/generic-reusable-components/team-member-block.js"],"names":["StackableColumnsContainer","_styled","target","name","styles","ReadyToGetStartedSection","KateFromHrScreenshotImage","___EmotionJSX","StaticQuery","query","render","data","Img","fluid","placeholderImage","childImageSharp","TripleGainersEmailImage","JimTwitterScreenshotImage","EverybodyCodesScreenshotImage","WojBlogScreenshotImage","Evaluates2ScreenshotImage","E2GithubScreenshotImage","TitaniumLambdaImage","GatsyStarterTddBddImage","FreeTalksImage","StyledOurWorkPieceOfWork","OurWorkPieceOfWork","_ref","title","header1","header1link","paragraph1","header2","paragraph2","imgName","imgOnLeft","buttonText","buttonLinkTo","children","className","href","WojScreenshot","getImage","PersonColorContainer","StyledPersonImage","TeamMemberBlock","itemId","linkTo","role","img","Link","to"],"mappings":"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","file":"component---src-pages-our-work-js-46511c216493c77a2e89.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst StackableColumnsContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  padding: 0 20px 80px;\n\n  @media only screen and (max-width: 900px) {\n    font-size: 18px;\n    line-height: 31px;\n    flex-direction: column;\n  }\n\n  p {\n    font-size: 20px;\n    line-height: 34px;\n\n    @media only screen and (max-width: 900px) {\n      font-size: 19px;\n      line-height: 32px;\n    }\n  }\n`;\n\nexport default StackableColumnsContainer;\n","import styled from '@emotion/styled';\n\nconst ReadyToGetStartedSection = styled.div`\n  \n  padding: calc(40px + 20vw) calc(20px + 2vw);\n  \n  h1 {\n    font-family: 'e2-Raleway-Black-Italic';\n    font-size: calc(20px + 5vw);\n    line-height: calc(30px + 9vw);\n    margin: calc(5px + 1vw);\n    text-align: center;\n  }\n\n  a {\n    cursor: pointer;\n    font-family: 'e2-Raleway-Semi-Bold-Italic';\n    display: flex;\n    justify-content: center;\n    padding-top: calc(10px + 6vw);\n    font-size: calc(10px + 3vw);\n    line-height: calc(15px + 4.5vw);\n    justify-content: center;\n    align-items: center;\n    text-decoration: underline;\n    letter-spacing: 1.5px;\n  }\n`;\n\nexport default ReadyToGetStartedSection;","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst KateFromHrScreenshotImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"kate-from-hr-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default KateFromHrScreenshotImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst TripleGainersEmailImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"triple-gainers-email.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default TripleGainersEmailImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst JimTwitterScreenshotImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"jim-twitter-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default JimTwitterScreenshotImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst EverybodyCodesScreenshotImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"everybody-codes-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default EverybodyCodesScreenshotImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst WojBlogScreenshotImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"woj-blog-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default WojBlogScreenshotImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Evaluates2ScreenshotImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"evaluates-2-screenshot.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default Evaluates2ScreenshotImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst E2GithubScreenshotImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"e2-github-page.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default E2GithubScreenshotImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst TitaniumLambdaImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"titanium-lambda-logo.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default TitaniumLambdaImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst GatsyStarterTddBddImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"gatsby-starter-tdd-bdd.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default GatsyStarterTddBddImage;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst FreeTalksImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"free-talks.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default FreeTalksImage;\n","import styled from '@emotion/styled';\nimport ProgressTrackingImage from './img-components/progress-tracking.img';\nimport StaffAugmentationImage from './img-components/staff-augmentation.img';\nimport ProjectKickoffImage from './img-components/project-kickoff.img';\nimport Link from 'gatsby-link';\nimport KateFromHrScreenshotImage from './img-components/kate-from-hr-screenshot.img';\nimport TripleGainersEmailImage from './img-components/triple-gainers-email.img';\nimport JimTwitterScreenshotImage from './img-components/jim-twitter-screenshot.img';\nimport EverybodyCodesScreenshotImage from './img-components/everybody-codes.img';\nimport WojScreenshot from './img-components/woj-blog-screenshot.img';\nimport Evaluates2ScreenshotImage from './img-components/evaluates-2-screenshot.img';\nimport E2GithubScreenshotImage from './img-components/e2-github-page.img';\nimport TitaniumLambdaImage from './img-components/titanium-lambda.img';\nimport GatsyStarterTddBddImage from './img-components/gatsby-starter-tdd-bdd.img';\nimport FreeTalksImage from './img-components/free-talks.img';\n\nconst StyledOurWorkPieceOfWork = styled.div`\n  .container {\n    flex: 1;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    padding: calc(15px + 3vw);\n    flex: 1;\n    width: 100%;\n    height: 100%;\n    flex-direction: row-reverse;\n\n    margin: 0;\n\n    @media only screen and (max-width: 960px) {\n      align-items: center;\n      font-size: 18px;\n      line-height: 31px;\n      flex-direction: column;\n    }\n  }\n\n  p {\n    font-size: 16px;\n    line-height: 29px;\n    letter-spacing: 0.75px;\n    font-family: 'e2-Raleway';\n    color: #4a4a4a;\n\n    @media only screen and (max-width: 900px) {\n      font-size: 19px;\n      line-height: 32px;\n    }\n  }\n\n  div {\n    align-content: center;\n    text-align: center;\n    flex: 1;\n\n    .img {\n      flex: 1;\n      margin: 35px;\n      object-fit: contain;\n      width: 100%;\n      height: 100%;\n    }\n\n    a {\n      font-size: 22px;\n      line-height: 37px;\n      margin: 10px 0 10px;\n      display: block;\n    }\n    .text-container {\n      flex: 1;\n      text-align: left;\n    }\n  }\n\n  h1 {\n    font-size: 43px;\n    letter-spacing: 0.5px;\n    font-family: 'e2-Raleway-Extra-Bold';\n  }\n\n  h2 {\n    font-size: 24px;\n    letter-spacing: 0.25px;\n    font-family: 'e2-Raleway';\n  }\n\n  .one {\n    background-color: lightgreen;\n    flex: 1;\n  }\n\n  .two {\n    flex: 1;\n    background-color: lightskyblue;\n  }\n\n  li {\n    font-size: calc(20px);\n    line-height: calc(29px);\n  }\n\n  .reversed {\n    flex-direction: row;\n\n    @media only screen and (max-width: 960px) {\n      flex-direction: column;\n    }\n  }\n\n  button {\n    background-image: linear-gradient(90deg, #ff7d00, #e0d950);\n    transition: opacity 0.2s ease;\n    color: #fff;\n    font-size: 15px;\n    line-height: 24px;\n    font-family: 'e2-Raleway-Semi-Bold';\n    padding: 10px 26px;\n    border-radius: 4px;\n    border: none;\n    max-width: 200px;\n    cursor: pointer;\n    transition-property: opacity;\n    transition-duration: 0.2s;\n    transition-timing-function: ease;\n    transition-delay: 0s;\n  }\n`;\n\nconst OurWorkPieceOfWork = ({\n  title,\n  header1,\n  header1link,\n  paragraph1,\n  header2,\n  paragraph2,\n  imgName,\n  imgOnLeft,\n  buttonText,\n  buttonLinkTo,\n  children,\n}) => {\n  const getImage = imgName => {\n    switch (imgName) {\n      \n      case 'TRIPLE_GAINERS_EMAIL':\n        return (\n          <a href={header1link}>\n            <TripleGainersEmailImage />\n          </a>\n        );\n\n      case 'KATE_FROM_HR':\n        return (\n          <a href={header1link}>\n            <KateFromHrScreenshotImage />\n          </a>\n        );\n        \n        case 'JIM_TWITTER':\n          return (<a href={header1link}>\n             <JimTwitterScreenshotImage />\n          </a>);\n\n      case 'WOJ_BLOG':\n          return (<a href={header1link}>\n            <WojScreenshot/>\n         </a>);\n      \n      case 'E2_GITHUB':\n          return (<a href={header1link}>\n            <E2GithubScreenshotImage/>\n         </a>);\n      \n      case 'E2_SCREENSHOT':\n          return (<a href={header1link}>\n            <Evaluates2ScreenshotImage/>\n         </a>);\n      \n      case 'TITANIUM_LAMBDA':\n          return (<a href={header1link}>\n            <TitaniumLambdaImage/>\n         </a>);\n\n      case 'GATSBY_STARTER_TDD_BDD':\n          return (<a href={header1link}>\n            <GatsyStarterTddBddImage/>\n         </a>);\n\n      case 'FREE_TALKS':\n          return (<a href={header1link}>\n            <FreeTalksImage/>\n         </a>);\n\n      case 'EVERYBODY_CODES':\n          return (<a href={header1link}>\n            <EverybodyCodesScreenshotImage/>\n         </a>);\n    }\n  };\n\n  return (\n    <StyledOurWorkPieceOfWork>\n      <div className={`container ${imgOnLeft ? 'reversed' : ''}`}>\n        <div className=\"img\">{getImage(imgName)}</div>\n        <div className=\"text-container\">\n          <h1>{title}</h1>\n          <a href={header1link}>{header1}</a>\n          <p>{paragraph1}</p>\n          <h2>{header2}</h2>\n          <p>{paragraph2}</p>\n          {children}\n          <a href={buttonLinkTo}>\n            <button>{buttonText}</button>\n          </a>\n        </div>\n      </div>\n    </StyledOurWorkPieceOfWork>\n  );\n};\n\nexport default OurWorkPieceOfWork;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst PersonImage = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"person-img.jpg\" }) {\n          childImageSharp {\n            fluid(maxWidth: 600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n  />\n);\nexport default PersonImage;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PersonImage from './../img-components/person-img.img';\nimport Link from 'gatsby-link';\n\nconst PersonColorContainer = styled.div`\n  background-color: yellowgreen;\n  border-radius: 8px;\n`;\n\nconst StyledPersonImage = styled.div`\n  width: 150px;\n  height: 100%;\n  min-height: 300px;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  color: #0033cc;\n  /* border-radius: 0px 6px 6px 0px; */\n  border: 0;\n\n  .gatsby-image-wrapper {\n    background-color: #000032;\n    height: 200px;\n    border-radius: 8px;\n    max-width: 310px;\n\n    :hover {\n      top: -8px;\n      left: -8px;\n      position: absolute;\n    }\n  }\n\n  h2 {\n    font-size: 17px;\n    margin: 16px auto 6px 5px;\n    font-family: 'e2-Raleway-Semi-Bold';\n    line-height: 17px;\n\n    :hover {\n      color: #678cff;\n    }\n  }\n\n  p {\n    font-size: 15px;\n    margin: 2px auto 2px 5px;\n    font-family: 'e2-Raleway';\n    line-height: 18px;\n\n    :hover {\n      color: #678cff;\n    }\n  }\n\n  .bg-div {\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst TeamMemberBlock = ({ itemId, name, linkTo, role, img }) => {\n  return (\n    <Link to={linkTo}>\n      <StyledPersonImage>\n        <PersonColorContainer>{img}</PersonColorContainer>\n        <h2>{name}</h2>\n        <p>{role}</p>\n        <div className=\"bg-div\"></div>\n      </StyledPersonImage>\n    </Link>\n  );\n};\n\nexport default TeamMemberBlock;\n"],"sourceRoot":""}